wsl.1819 %>% head
wdl <- wsl.1819 %>%
select(home_team.home_team_name, away_team.away_team_name, home_score, away_score) %>%
mutate(match = row_number()) %>%
gather(HomeAway, Team, - home_score, -away_score, - match)
wdl %<>%
arrange(match) %>%
mutate(GD = home_score-away_score,
Team.GD = ifelse(HomeAway ==  "home_team.home_team_name", GD, -1*GD),
Result = ifelse(Team.GD > 0,"W",
if_else(Team.GD == 0,"D","L"))) %>%
arrange(Team, match) %>%
left_join(wdl %>% select(match, HomeAway, Team) %>% spread(HomeAway, Team), by = "match") %>%
select(match, Team, home_team.home_team_name, away_team.away_team_name, home_score, away_score, GD,  Team.GD, Result) %>%
group_by(Team) %>%
mutate(match = row_number()) %>%
ungroup()
wdl %>% filter(Team == "Chelsea FCW")
library(plyr)
library(tidyverse)
library(magrittr)
library(parallel)
library(rjson)
library(DT)
library(DataExplorer)
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
competitions <- fromJSON(file=paste0(path,"competitions.json"))
competitions <- bind_rows(competitions)
competitions %>% filter(competition_name == "FA Women's Super League")
match.files <- list.files(path=paste0(path,"matches"),
full.names = TRUE,recursive = TRUE)
match.files
all.matches <- mclapply(match.files, function(x){
match.temp <- fromJSON(file=x)
matches.df <- mclapply(match.temp, function(y){
data.frame(t(unlist(y)), stringsAsFactors = FALSE)
})
bind_rows(matches.df)
}) %>% bind_rows()
datatable(all.matches)
all.matches2 <- mclapply(match.files, function(x){
temp <- fromJSON(file=x)
temp <- mclapply(temp, function(y){ unlist(y)})
rbind.fill(mclapply(temp, function(z) do.call("data.frame", as.list(z))))
})%>% bind_rows()
datatable(all.matches2)
missing <- DataExplorer::plot_missing(all.matches)
all.matches.clean <- all.matches[,missing$data %>% filter(num_missing == 0) %>%
pull(feature) %>% as.vector()]
all.matches.clean %<>% mutate_at(vars(c("match_week", "home_score", "away_score")), funs(as.integer))
datatable(all.matches.clean)
wsl.1819 <- all.matches.clean %>%
filter(competition.competition_id == 37,
season.season_id == 4) %>%
arrange(match_week)
wsl.1819 %>% head
wdl <- wsl.1819 %>%
select(home_team.home_team_name, away_team.away_team_name, home_score, away_score) %>%
mutate(match = row_number()) %>%
gather(HomeAway, Team, - home_score, -away_score, - match)
wdl %<>%
arrange(match) %>%
mutate(GD = home_score-away_score,
Team.GD = ifelse(HomeAway ==  "home_team.home_team_name", GD, -1*GD),
Result = ifelse(Team.GD > 0,"W",
if_else(Team.GD == 0,"D","L"))) %>%
arrange(Team, match) %>%
left_join(wdl %>% select(match, HomeAway, Team) %>% spread(HomeAway, Team), by = "match") %>%
select(match, Team, home_team.home_team_name, away_team.away_team_name, home_score, away_score, GD,  Team.GD, Result) %>%
group_by(Team) %>%
mutate(match = row_number()) %>%
ungroup()
wdl %>% filter(Team == "Chelsea FCW")
# SonuÃ§ FrekanslarÄ±
wdl %>%
ggplot(aes(Result, fill = factor(Result,levels = c("W", "D", "L"))))+
geom_bar(show.legend = FALSE)+
facet_wrap(Team~.)+
scale_fill_ordinal()+
labs(fill = NULL)
# MaÃ§ BaÅŸÄ±na SonuÃ§
wdl %>%
mutate(Result = factor(Result, levels = c("L", "D", "W"), ordered = TRUE)) %>%
ggplot(aes(x = match, y = Result, color = Result))+
geom_point(size = 3.2)+
facet_wrap(Team~.)+
scale_color_manual(values = c("khaki","khaki3", "seagreen"))+
theme(legend.position = "bottom")+
labs(x = "Match", y = NULL)
event.files <- list.files(path=paste0(path,"\\events"),
full.names = TRUE,recursive = TRUE)
wsl.1819.index <- which(unlist(str_extract_all(event.files, "\\(?[0-9]+\\)?")) %in% wsl.1819$match_id)
wsl.1819.index
# Starting 11
starting <- mclapply(event.files[wsl.1819.index], function(x){
match_id <- data.frame(match_id = as.numeric(str_extract_all(x, "\\(?[0-9]+\\)?")[[1]]))
temp <- fromJSON(file=x)
temp <- mclapply(temp[1:2], function(y){
data.frame(team = y$team$name,
matrix(t(unlist(y$tactics$lineup)), byrow = TRUE, ncol = 5), stringsAsFactors = FALSE)
}) %>% bind_rows()
cbind(match_id, temp)
}) %>% bind_rows() %>%
rename("player.id" = X1, "player.name" = X2, "position.id" = X3, "position.name" = X4, "jersey.name" = X5) %>%
select(match_id, team, player.name)
starting %>% head
# Squad Rotation
# MaÃ§lar TakÄ±mlara GÃ¶re Liste FormatÄ±na ParÃ§alanÄ±r
starting.squad <- starting %>%
arrange(team) %>%
group_split(team) %>%
setNames(unique(sort(starting$team)))
# Her Bir TakÄ±m MaÃ§ Id'lerine GÃ¶re Liste FormatÄ±nda ParÃ§alanÄ±r ArdÄ±ndan Her hafta takÄ±m rotasyonuna bakÄ±lÄ±r
squad.rotation <- mclapply(starting.squad, function(x){
temp <- x %>% group_split(match_id) %>% setNames(unique(x$match_id))
squad.rotation <- sapply(1:(length(temp)-1), function(y){
length(setdiff(temp[[y]]$player.name, temp[[y+1]]$player.name))
})
squad.rotation <- c(0, squad.rotation)
})
# TÃ¼m TakÄ±mlarÄ±n MaÃ§ Rotasyonu WDL verisi ile birleÅŸtirilir.
squad.rotation <- mclapply(names(squad.rotation), function(x){
data.frame(match = 1:length(squad.rotation[[x]]), Team = x, rotated = squad.rotation[[x]], stringsAsFactors = FALSE)
}) %>% bind_rows()
wdl <- left_join(wdl, squad.rotation, by = c("match", "Team"))
wdl
# WDL Verisi ile Her bir takÄ±mÄ±n maÃ§ rotasyonu sonuÃ§larÄ±
ggplot(data=wdl, aes(x=match,y=rotated,fill=Result)) +
geom_bar(stat="identity",width=0.5) +
scale_fill_manual(values = c("yellow", "red", "seagreen"))+
facet_grid(rows=vars(Team))
# Tek TakÄ±m
wdl %>%
filter(Team == "Arsenal WFC") %>%
ggplot(aes(x=match,y=rotated,fill=Result)) +
geom_bar(stat="identity",width=0.5)
# All Teams
wdl %>%
ggplot(aes(x=match,y=rotated,fill=Result)) +
geom_bar(stat="identity",width=0.5) +
scale_fill_manual(values = c("yellow", "red", "seagreen"))+
facet_wrap(Team~.)
library(plyr)
library(tidyverse)
library(magrittr)
library(parallel)
library(rjson)
source(file = "Functions/Pitch for Statsbomb.R")
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
match.files <- list.files(path=paste0(path,"matches"),
full.names = TRUE,recursive = TRUE)
match.id <- mclapply(match.files, function(x){
match.temp <- fromJSON(file=x)
matches.df <- mclapply(match.temp, function(y){
data.frame(t(unlist(y)), stringsAsFactors = FALSE)
})
bind_rows(matches.df)
}) %>% bind_rows() %>%
filter(competition.competition_id == 37,
season.season_id == 4) %>%
arrange(match_week) %>%
pull(match_id)
rm(match.files)
event.files <- list.files(path=paste0(path,"events"),
full.names = TRUE,recursive = TRUE)
wsl.1819.index <- which(unlist(str_extract_all(event.files, "\\(?[0-9]+\\)?")) %in% match.id)
rm(match.id)
wsl.1819.index
full.pass.df <- mclapply(event.files[wsl.1819.index], function(x){
match_id <- data.frame(match_id = as.numeric(str_extract_all(x, "\\(?[0-9]+\\)?")[[1]]))
temp <- fromJSON(file=x)
pass.index <- which(sapply(temp,function(i) i$type$name)=="Pass")
event <- mclapply(temp[pass.index], function(y){
if(is.null(y$pass$end_location)){end_location <- NA_real_}else{end_location <- y$pass$end_location}
if(is.null(y$pass$recipient$name)){receiver <- NA_character_}else{receiver <- y$pass$recipient$name}
if(is.null(y$pass$length)){pass_length <- NA_real_}else{pass_length <- y$pass$length}
if(is.null(y$pass$angle)){pass_angle <- NA_real_}else{pass_angle <- y$pass$angle}
if(is.null(y$pass$body_part$name)){body_part <- NA_character_}else{body_part <- y$pass$body_part$name}
data.frame(
Possession.Team = y$possession_team$name,
Possession = y$possession,
Passer = y$player$name,
X.Pass = y$location[1],
Y.Pass = y$location[2],
Pass.Type = y$pass$height$name,
Receiver = receiver,
X.Receive = end_location[1],
Y.Receive = end_location[2],
Pass.Length = pass_length,
Pass.Angle = pass_angle,
Body.Part = body_part,
stringsAsFactors = FALSE
)
}) %>% bind_rows()
cbind(match_id, event)
}) %>% bind_rows()
# Cleaning
full.pass.df2 <- full.pass.df %>%
filter(Y.Receive <= 80) %>% #cleaning the data
mutate(Y.Pass = 80 - Y.Pass, #changing the axis so that origin starts at the lower left corner
Y.Receive = 80 - Y.Receive)
cl <- full.pass.df2 %>% select("Possession.Team","X.Pass","Y.Pass","X.Receive","Y.Receive")
#perform k-means on the dataset (removing the 1st column because we just need to use the last 4 columns in our analysis)
mc = mclapply(c(25,50,75), function(x,centers) kmeans(x, centers, iter.max=1000), x=cl[,-1])
cl$Cluster.25 <- mc[[1]]$cluster #created clusters using 25 clusters
cl$Cluster.50 <- mc[[2]]$cluster #created clusters using 50 clusters
cl$Cluster.75 <- mc[[3]]$cluster #created clusters using 75 clusters
cluster.50.summary <- cl %>%
group_by(Cluster.50) %>%
summarise(X.Pass = mean(X.Pass),Y.Pass = mean(Y.Pass),
X.Receive = mean(X.Receive), Y.Receive = mean(Y.Receive),
count = n()) #obtain for each cluster id, the average location of the pass
cluster.50.team.summary <- cl %>%
group_by(Cluster.50,Possession.Team) %>%
summarise(count = n()) #get a count per team
arsenal.clusters <- cluster.50.team.summary %>%
group_by(Cluster.50) %>%
mutate(z.score = (count - mean(count))/sd(count)) %>%
filter(Possession.Team == "Arsenal WFC" & z.score >= 1.5) #identify which clusters that arsenal does more than 1.5 sd than the league average
pitch() + geom_segment(data=cluster.50.summary, aes(x=X.Pass,xend=X.Receive,
y=Y.Pass,yend=Y.Receive,color=count),size=1.5,arrow=arrow(length = unit(0.03, "npc"))) +
geom_text(data=cluster.50.summary,aes(x=X.Pass,y=Y.Pass,label=Cluster.50))
pitch() + geom_segment(data=cluster.50.summary, aes(x=X.Pass,xend=X.Receive,
y=Y.Pass,yend=Y.Receive),size=1.5,arrow=arrow(length = unit(0.03, "npc"))) +
geom_segment(data=cluster.50.summary[which(cluster.50.summary$Cluster.50 %in% arsenal.clusters$Cluster.50),], aes(x=X.Pass,xend=X.Receive,
y=Y.Pass,yend=Y.Receive),size=1.5,color="red",arrow=arrow(length = unit(0.03, "npc")))
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
library(plyr)
library(tidyverse)
library(magrittr)
library(parallel)
library(rjson)
source(file = "Functions/Pitch for Statsbomb.R")
#ID for England vs Sweden Womens World Cup
# match id = 69301
df <- fromJSON(file=paste0(path,"\\events\\69301.json"))
# Shot Index
shot.index <- which(sapply(df,function(x) x$type$name)=="Shot")
shot.index
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
shots <- mclapply(df[shot.index], function(x){ unlist(x)})
library(plyr)
shots <- rbind.fill(mclapply(shots,
function(x) do.call("data.frame", as.list(x))
))
shots %<>% select(-contains("freeze")) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, shot.statsbomb_xg)), funs(as.numeric))
home_team ="England Women's"
away_team ="Sweden Women's"
sut <- shots %>%
mutate(location2 = if_else(team.name == home_team,  80 - location2, location2),
location1 = if_else(team.name == away_team, 120 - location1, location1))
# Shots
pitch()+
geom_point(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, color = team.name), size = 5)+
geom_point(sut %>% filter(shot.outcome.name != "Goal"),
mapping = aes(location1, location2, color = team.name), size = 5, alpha = 0.4)+
scale_color_manual(values = c("red", "blue"))+
geom_text(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, label = player.name),vjust = -0.5, hjust = -0.01)+
labs(title = "England Women's Shots  |  Sweden Women's Shots", color = NULL)+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5)
)
##### XG'Ã¼n neden karesini alÄ±yor orayÄ± tam anlamadÄ±m eÄŸitimde
# Expected Goal
pitch()+
geom_point(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, color = team.name,
size = sqrt(shot.statsbomb_xg*15)))+
geom_point(sut %>% filter(shot.outcome.name != "Goal"),
mapping = aes(location1, location2, color = team.name,
size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4)+
scale_color_manual(values = c("red", "blue"))+
geom_text(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, label = player.name),
vjust = -0.5, hjust = -0.01)+
labs(title = "England Women's Shots  |  Sweden Women's Shots", color = NULL, size = "XG")+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5)
)
# Pass Index
pass.index <- which(sapply(df,function(x) x$type$name)=="Pass")
pass.index %>% head
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
pass <- mclapply(df[pass.index], function(x){ unlist(x)})
library(plyr)
pass <- rbind.fill(mclapply(pass,
function(x) do.call("data.frame", as.list(x))
))
head(pass)
sweden <- pass %>%
filter(team.name == "Sweden Women's") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2)), funs(as.numeric))
pitch()+
geom_point(sweden, mapping = aes(120-location1, location2))+
labs(title = "Sweden Women's All Pass Locations")
sara.caroline.seger <- pass %>%
filter(player.name == "Sara Caroline Seger") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric)) %>%
mutate(dx = pass.end_location1 - location1,
dy = pass.end_location2 - location2)
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2))+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), size = 4, color = "blue")+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2, label = index), size = 4)+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, y = 80-location2,
xend = pass.end_location1, yend = 80-pass.end_location2),
color = "yellow", arrow = arrow(length = unit(0.01, "npc")))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, location2), color = "blue")+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, xend = pass.end_location1, y = location2, yend = pass.end_location2),
arrow = arrow(length = unit(0.03, "npc")), color = "yellow")+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), color = "blue")+
geom_segment(sara.caroline.seger,
mapping = aes(x = location1, xend = pass.end_location1-location1,
y = location2, yend = pass.end_location2-location2))
#ID for England vs Sweden Womens World Cup
# match id = 7551
fr_ar <- fromJSON(file=paste0(path,"events\\7580.json"))
sapply(fr_ar,function(x) x$player$name) %>% unlist() %>% unique()
# Shot Index
player.index <- which(sapply(fr_ar,function(x) x$player$name)=="Lionel AndrÃ©s Messi Cuccittini")
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
messi <- lapply(fr_ar[player.index], function(x){ unlist(x)})
library(plyr)
messi <- rbind.fill(lapply(messi,
function(x) do.call("data.frame", as.list(x))
))
messi %<>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric))
# Pitch
pitch(pitch_theme = "green")+
# Messi's Shots
geom_point(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"),
mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), show.legend = FALSE)+
geom_text(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"), mapping = aes(location1+3, location2-2, label = "L. Messi"),
size = 5)+
# If outcome result is goal
geom_point(sut %>% filter(shot.outcome.name == "Goal"), mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), shape = 21, fill = "red" , show.legend = FALSE)+
# Except Messi's Shots & Goals
geom_point(sut %>% filter(player.name != "Lionel AndrÃ©s Messi Cuccittini",shot.outcome.name != "Goal"), mapping = aes(location1, location2, color = team.name,  size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4, show.legend = FALSE)+
scale_color_manual(values = c("white", "navy"))+
# Title
theme(legend.position = "bottom", text = element_text(color = "white"),plot.title = element_text(hjust=0.5, vjust = -5),
plot.subtitle = element_text(hjust=0.5, vjust = -5))+
labs(title = "Argentina | France",
subtitle = "FIFA World Cup 18")
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
library(plyr)
library(tidyverse)
library(magrittr)
library(parallel)
library(rjson)
source(file = "Functions/Pitch for Statsbomb.R")
#ID for England vs Sweden Womens World Cup
# match id = 69301
df <- fromJSON(file=paste0(path,"\\events\\69301.json"))
# Shot Index
shot.index <- which(sapply(df,function(x) x$type$name)=="Shot")
shot.index
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
shots <- mclapply(df[shot.index], function(x){ unlist(x)})
library(plyr)
shots <- rbind.fill(mclapply(shots,
function(x) do.call("data.frame", as.list(x))
))
shots %<>% select(-contains("freeze")) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, shot.statsbomb_xg)), funs(as.numeric))
home_team ="England Women's"
away_team ="Sweden Women's"
sut <- shots %>%
mutate(location2 = if_else(team.name == home_team,  80 - location2, location2),
location1 = if_else(team.name == away_team, 120 - location1, location1))
# Shots
pitch()+
geom_point(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, color = team.name), size = 5)+
geom_point(sut %>% filter(shot.outcome.name != "Goal"),
mapping = aes(location1, location2, color = team.name), size = 5, alpha = 0.4)+
scale_color_manual(values = c("red", "blue"))+
geom_text(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, label = player.name),vjust = -0.5, hjust = -0.01)+
labs(title = "England Women's Shots  |  Sweden Women's Shots", color = NULL)+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5)
)
##### XG'Ã¼n neden karesini alÄ±yor orayÄ± tam anlamadÄ±m eÄŸitimde
# Expected Goal
pitch()+
geom_point(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, color = team.name,
size = sqrt(shot.statsbomb_xg*15)))+
geom_point(sut %>% filter(shot.outcome.name != "Goal"),
mapping = aes(location1, location2, color = team.name,
size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4)+
scale_color_manual(values = c("red", "blue"))+
geom_text(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, label = player.name),
vjust = -0.5, hjust = -0.01)+
labs(title = "England Women's Shots  |  Sweden Women's Shots", color = NULL, size = "XG")+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5)
)
# Pass Index
pass.index <- which(sapply(df,function(x) x$type$name)=="Pass")
pass.index %>% head
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
pass <- mclapply(df[pass.index], function(x){ unlist(x)})
library(plyr)
pass <- rbind.fill(mclapply(pass,
function(x) do.call("data.frame", as.list(x))
))
head(pass)
sweden <- pass %>%
filter(team.name == "Sweden Women's") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2)), funs(as.numeric))
pitch()+
geom_point(sweden, mapping = aes(120-location1, location2))+
labs(title = "Sweden Women's All Pass Locations")
sara.caroline.seger <- pass %>%
filter(player.name == "Sara Caroline Seger") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric)) %>%
mutate(dx = pass.end_location1 - location1,
dy = pass.end_location2 - location2)
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2))+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), size = 4, color = "blue")+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2, label = index), size = 4)+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, y = 80-location2,
xend = pass.end_location1, yend = 80-pass.end_location2),
color = "yellow", arrow = arrow(length = unit(0.01, "npc")))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, location2), color = "blue")+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, xend = pass.end_location1, y = location2, yend = pass.end_location2),
arrow = arrow(length = unit(0.03, "npc")), color = "yellow")+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), color = "blue")+
geom_segment(sara.caroline.seger,
mapping = aes(x = location1, xend = pass.end_location1-location1,
y = location2, yend = pass.end_location2-location2))
#ID for England vs Sweden Womens World Cup
# match id = 7551
fr_ar <- fromJSON(file=paste0(path,"events\\7580.json"))
sapply(fr_ar,function(x) x$player$name) %>% unlist() %>% unique()
# Shot Index
player.index <- which(sapply(fr_ar,function(x) x$player$name)=="Lionel AndrÃ©s Messi Cuccittini")
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
messi <- lapply(fr_ar[player.index], function(x){ unlist(x)})
library(plyr)
messi <- rbind.fill(lapply(messi,
function(x) do.call("data.frame", as.list(x))
))
messi %<>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric))
# Pitch
pitch(pitch_theme = "green")+
# Messi's Shots
geom_point(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"),
mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), show.legend = FALSE)+
geom_text(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"), mapping = aes(location1+3, location2-2, label = "L. Messi"),
size = 5)+
# If outcome result is goal
geom_point(sut %>% filter(shot.outcome.name == "Goal"), mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), shape = 21, fill = "red" , show.legend = FALSE)+
# Except Messi's Shots & Goals
geom_point(sut %>% filter(player.name != "Lionel AndrÃ©s Messi Cuccittini",shot.outcome.name != "Goal"), mapping = aes(location1, location2, color = team.name,  size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4, show.legend = FALSE)+
scale_color_manual(values = c("white", "navy"))+
# Title
theme(legend.position = "bottom", text = element_text(color = "white"),plot.title = element_text(hjust=0.5, vjust = -5),
plot.subtitle = element_text(hjust=0.5, vjust = -5))+
labs(title = "Argentina | France",
subtitle = "FIFA World Cup 18")
