)
# Pass Index
pass.index <- which(sapply(df,function(x) x$type$name)=="Pass")
pass.index %>% head
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
pass <- mclapply(df[pass.index], function(x){ unlist(x)})
library(plyr)
pass <- rbind.fill(mclapply(pass,
function(x) do.call("data.frame", as.list(x))
))
head(pass)
sweden <- pass %>%
filter(team.name == "Sweden Women's") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2)), funs(as.numeric))
pitch()+
geom_point(sweden, mapping = aes(120-location1, location2))+
labs(title = "Sweden Women's All Pass Locations")
sara.caroline.seger <- pass %>%
filter(player.name == "Sara Caroline Seger") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric)) %>%
mutate(dx = pass.end_location1 - location1,
dy = pass.end_location2 - location2)
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2))+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), size = 4, color = "blue")+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2, label = index), size = 4)+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, y = 80-location2,
xend = pass.end_location1, yend = 80-pass.end_location2),
color = "yellow", arrow = arrow(length = unit(0.01, "npc")))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, location2), color = "blue")+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, xend = pass.end_location1, y = location2, yend = pass.end_location2),
arrow = arrow(length = unit(0.03, "npc")), color = "yellow")+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), color = "blue")+
geom_segment(sara.caroline.seger,
mapping = aes(x = location1, xend = pass.end_location1-location1,
y = location2, yend = pass.end_location2-location2))
#ID for England vs Sweden Womens World Cup
# match id = 7551
fr_ar <- fromJSON(file=paste0(path,"events\\7580.json"))
sapply(fr_ar,function(x) x$player$name) %>% unlist() %>% unique()
# Shot Index
player.index <- which(sapply(fr_ar,function(x) x$player$name)=="Lionel AndrÃ©s Messi Cuccittini")
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
messi <- lapply(fr_ar[player.index], function(x){ unlist(x)})
library(plyr)
messi <- rbind.fill(lapply(messi,
function(x) do.call("data.frame", as.list(x))
))
messi %<>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric))
# Pitch
pitch(pitch_theme = "green")+
# Messi's Shots
geom_point(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"),
mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), show.legend = FALSE)+
geom_text(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"), mapping = aes(location1+3, location2-2, label = "L. Messi"),
size = 5)+
# If outcome result is goal
geom_point(sut %>% filter(shot.outcome.name == "Goal"), mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), shape = 21, fill = "red" , show.legend = FALSE)+
# Except Messi's Shots & Goals
geom_point(sut %>% filter(player.name != "Lionel AndrÃ©s Messi Cuccittini",shot.outcome.name != "Goal"), mapping = aes(location1, location2, color = team.name,  size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4, show.legend = FALSE)+
scale_color_manual(values = c("white", "navy"))+
# Title
theme(legend.position = "bottom", text = element_text(color = "white"),plot.title = element_text(hjust=0.5, vjust = -5),
plot.subtitle = element_text(hjust=0.5, vjust = -5))+
labs(title = "Argentina | France",
subtitle = "FIFA World Cup 18")
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
library(plyr)
library(tidyverse)
library(magrittr)
library(parallel)
library(rjson)
source(file = "Functions/Pitch for Statsbomb.R")
#ID for England vs Sweden Womens World Cup
# match id = 69301
df <- fromJSON(file=paste0(path,"\\events\\69301.json"))
# Shot Index
shot.index <- which(sapply(df,function(x) x$type$name)=="Shot")
shot.index
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
shots <- mclapply(df[shot.index], function(x){ unlist(x)})
library(plyr)
shots <- rbind.fill(mclapply(shots,
function(x) do.call("data.frame", as.list(x))
))
shots %<>% select(-contains("freeze")) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, shot.statsbomb_xg)), funs(as.numeric))
home_team ="England Women's"
away_team ="Sweden Women's"
sut <- shots %>%
mutate(location2 = if_else(team.name == home_team,  80 - location2, location2),
location1 = if_else(team.name == away_team, 120 - location1, location1))
# Shots
pitch()+
geom_point(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, color = team.name), size = 5)+
geom_point(sut %>% filter(shot.outcome.name != "Goal"),
mapping = aes(location1, location2, color = team.name), size = 5, alpha = 0.4)+
scale_color_manual(values = c("red", "blue"))+
geom_text(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, label = player.name),vjust = -0.5, hjust = -0.01)+
labs(title = "England Women's Shots  |  Sweden Women's Shots", color = NULL)+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5)
)
##### XG'Ã¼n neden karesini alÄ±yor orayÄ± tam anlamadÄ±m eÄŸitimde
# Expected Goal
pitch()+
geom_point(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, color = team.name,
size = sqrt(shot.statsbomb_xg*15)))+
geom_point(sut %>% filter(shot.outcome.name != "Goal"),
mapping = aes(location1, location2, color = team.name,
size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4)+
scale_color_manual(values = c("red", "blue"))+
geom_text(sut %>% filter(shot.outcome.name == "Goal"),
mapping = aes(location1, location2, label = player.name),
vjust = -0.5, hjust = -0.01)+
labs(title = "England Women's Shots  |  Sweden Women's Shots", color = NULL, size = "XG")+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5)
)
# Pass Index
pass.index <- which(sapply(df,function(x) x$type$name)=="Pass")
pass.index %>% head
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
pass <- mclapply(df[pass.index], function(x){ unlist(x)})
library(plyr)
pass <- rbind.fill(mclapply(pass,
function(x) do.call("data.frame", as.list(x))
))
head(pass)
sweden <- pass %>%
filter(team.name == "Sweden Women's") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2)), funs(as.numeric))
pitch()+
geom_point(sweden, mapping = aes(120-location1, location2))+
labs(title = "Sweden Women's All Pass Locations")
sara.caroline.seger <- pass %>%
filter(player.name == "Sara Caroline Seger") %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric)) %>%
mutate(dx = pass.end_location1 - location1,
dy = pass.end_location2 - location2)
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2))+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), size = 4, color = "blue")+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2, label = index), size = 4)+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, y = 80-location2,
xend = pass.end_location1, yend = 80-pass.end_location2),
color = "yellow", arrow = arrow(length = unit(0.01, "npc")))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, location2), color = "blue")+
geom_segment(sara.caroline.seger, mapping = aes(x = location1, xend = pass.end_location1, y = location2, yend = pass.end_location2),
arrow = arrow(length = unit(0.03, "npc")), color = "yellow")+
labs(title = "Sara Caroline Seger's All Pass Locations",
subtitle = paste("S. Caroline Seger:", unique(sara.caroline.seger$position.name)))
pitch()+
geom_point(sara.caroline.seger, mapping = aes(location1, 80-location2), color = "blue")+
geom_segment(sara.caroline.seger,
mapping = aes(x = location1, xend = pass.end_location1-location1,
y = location2, yend = pass.end_location2-location2))
#ID for England vs Sweden Womens World Cup
# match id = 7551
fr_ar <- fromJSON(file=paste0(path,"events\\7580.json"))
sapply(fr_ar,function(x) x$player$name) %>% unlist() %>% unique()
# Shot Index
player.index <- which(sapply(fr_ar,function(x) x$player$name)=="Lionel AndrÃ©s Messi Cuccittini")
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
messi <- lapply(fr_ar[player.index], function(x){ unlist(x)})
library(plyr)
messi <- rbind.fill(lapply(messi,
function(x) do.call("data.frame", as.list(x))
))
messi %<>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, pass.end_location1, pass.end_location2)), funs(as.numeric))
# Pitch
pitch(pitch_theme = "green")+
# Messi's Shots
geom_point(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"),
mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), show.legend = FALSE)+
geom_text(sut %>% filter(player.name == "Lionel AndrÃ©s Messi Cuccittini"), mapping = aes(location1+3, location2-2, label = "L. Messi"),
size = 5)+
# If outcome result is goal
geom_point(sut %>% filter(shot.outcome.name == "Goal"), mapping = aes(location1, location2, size = sqrt(shot.statsbomb_xg*15)), shape = 21, fill = "red" , show.legend = FALSE)+
# Except Messi's Shots & Goals
geom_point(sut %>% filter(player.name != "Lionel AndrÃ©s Messi Cuccittini",shot.outcome.name != "Goal"), mapping = aes(location1, location2, color = team.name,  size = sqrt(shot.statsbomb_xg*15)),  alpha = 0.4, show.legend = FALSE)+
scale_color_manual(values = c("white", "navy"))+
# Title
theme(legend.position = "bottom", text = element_text(color = "white"),plot.title = element_text(hjust=0.5, vjust = -5),
plot.subtitle = element_text(hjust=0.5, vjust = -5))+
labs(title = "Argentina | France",
subtitle = "FIFA World Cup 18")
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
library(tidyverse)
library(magrittr)
library(parallel)
library(rjson)
library(gridExtra)
source(file = "Functions/Shots on goal & Outcomes for Statsbomb.R")
fr_ar <- fromJSON(file=paste0(path,"events\\7580.json"))
# Shot Index
shot.index <- which(sapply(fr_ar,function(x) x$type$name)=="Shot")
# Json FormatÄ±nÄ± Direk Data Frame'e DÃ¶nÃ¼ÅŸtÃ¼rme
shots <- lapply(fr_ar[shot.index], function(x){ unlist(x)})
library(plyr)
shots <- rbind.fill(lapply(shots,
function(x) do.call("data.frame", as.list(x))
))
shots <- shots %>%
filter(type.name == "Shot") %>%
select(-contains("freeze")) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(vars(c(location1, location2, shot.end_location1, shot.end_location2,
shot.end_location3, shot.statsbomb_xg)), funs(as.numeric))
shots <- shots %>% filter(shot.outcome.name %in% c('Goal','Post', 'Off T', 'Saved',
'Saved to Post','Saved Off Target')) %>%
mutate(goal.seq = 1:length(shot.outcome.name))
post(fill_background = "seagreen")+
geom_point(shots, mapping = aes(x = shot.end_location2, y = shot.end_location3,
color = shot.outcome.name, shape = shot.type.name), size = 5)+
geom_text(shots, mapping = aes(x = shot.end_location2, y = shot.end_location3, label = goal.seq),
size = 3, color = "darkslategray")+
theme(
legend.position = "bottom",
plot.title = element_text(hjust=0.5, vjust = -5, size = 15),
plot.subtitle =  element_text(hjust=0.5, vjust = -5),
text = element_text(color = "white")
)+
labs(color = "Shot Outcome", title = "FIFA World Cup 18", shape = NULL,
subtitle = "France - Argentina Shots")+
scale_color_manual(values = c("yellow", "red", "blue", "white", "black", "orange"))+
scale_shape_manual(values = c(15, 16, 17))
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
# competitions <- fromJSON(file="C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\competitions.json")
competitions <- fromJSON(file=paste0(path,"competitions.json"))
path
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
# competitions <- fromJSON(file="C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\competitions.json")
competitions <- fromJSON(file=paste0(path,"competitions.json"))
library(tidyverse)
library(rjson)
library(parallel)
library(DT)
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
# competitions <- fromJSON(file="C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\competitions.json")
competitions <- fromJSON(file=paste0(path,"competitions.json"))
competitions <- bind_rows(competitions)
datatable(competitions)
View(competitions)
library(tidyverse)
library(rjson)
library(parallel)
library(DT)
user = "erhan"
if(user == "erhan")
{path = "D:\\Akademik Çalışmalar\\Spor Bilimi\\Futbol\\Statsbomb\\data\\"}
if(user == "ekrem")
{path = "C:\\Users\\dell\\Desktop\\FoT\\open-data-master\\data\\"}
competitions <- fromJSON(file=paste0(path,"competitions.json"))
View(competitions)
competitions <- bind_rows(competitions)
View(competitions)
datatable(competitions)
match.files <- list.files(path=paste0(path,"matches"),
full.names = FALSE,recursive = TRUE)
match.files
match.files <- list.files(path=paste0(path,"matches"),
full.names = FALSE,recursive = FALSE)
match.files
match.files <- list.files(path=paste0(path,"matches"),
full.names = TRUE,recursive = TRUE)
match.files
match.files
match.files[1]
match.temp <- fromJSON(match.files[1])
match.temp <- fromJSON(file=match.files[1])
matches.df <- lapply(match.temp, function(y){
data.frame(y)
}
)
View(match.temp)
View(match.temp)
matches.df <- lapply(match.temp, function(y){
data.frame(unlist(y))
}
)
View(matches.df)
View(match.temp)
View(matches.df)
matches.df[[1]][["unlist.y."]]
matches.df[[30]]
matches.df[[1]]
matches.df[[2]]
matches.df[[3]]
match.temp <- fromJSON(file=match.files[1])
matches.df <- lapply(match.temp, function(y){
data.frame(t(unlist(y)))
}
)
View(matches.df)
matches.df[[1]]
matches.df[[1]]
str(matches.df)
str(matches.df[[1]])
str(matches.df$matchid[[1]])
str(matches.df$matchid[1])
str(matches.df$matchid)
str(matches.df[[1]]$matchid)
str(matches.df[[1]]$match_id)
matches.df <- lapply(match.temp, function(y){
data.frame(t(unlist(y)),stringsAsFactors = FALSE)
}
)
str(matches.df[[1]]$match_id)
str(matches.df[[1]])
matches.df
View(matches.df)
matches.df[[1]]
all.matches <- lapply(match.files, function(x){
match.temp <- fromJSON(file=x)
matches.df <- lapply(match.temp, function(y){
data.frame(t(unlist(y)), stringsAsFactors = FALSE)
})
bind_rows(matches.df)
})
View(all.matches)
all.matches[[1]][["match_id"]]
all.matches[[1]]
all.matches <- lapply(match.files, function(x){
match.temp <- fromJSON(file=x)
matches.df <- lapply(match.temp, function(y){
data.frame(t(unlist(y)), stringsAsFactors = FALSE)
})
bind_rows(matches.df)
}) %>% bind_rows()
View(all.matches)
datatable(all.matches)
all.matches %>%
group_by(competition.competition_name, season.season_name, home_team.home_team_gender) %>%
count() %>%
datatable()
numofmatches <- rbind(
all.matches %>% select(competition.competition_name, season.season_name,
home_team.home_team_name, home_team.home_team_gender) %>%
rename(competition = competition.competition_name, gender = home_team.home_team_gender,
team = home_team.home_team_name, season = season.season_name),
all.matches %>% select(competition.competition_name, season.season_name,
away_team.away_team_name, home_team.home_team_gender) %>%
rename(competition = competition.competition_name, gender = home_team.home_team_gender,
team = away_team.away_team_name, season = season.season_name)
) %>% group_by(competition, season, team, gender) %>%
count()
datatable(numofmatches)
numofmatches %>%
filter(competition == "FA Women's Super League", season == "2018/2019") %>%
arrange(n) %>%
datatable()
numofmatches %>%
filter(team == "Barcelona") %>%
datatable()
numofmatches %>%
filter(competition == "La Liga") %>% arrange(-n) %>%
datatable()
numofmatches %>%
filter(competition == "La Liga") %>% arrange(n) %>%
datatable()
numofmatches %>%
filter(competition == "La Liga") %>% arrange(-n) %>%
datatable()
numofmatches %>%
filter(competition == "FIFA World Cup") %>% arrange(-n) %>%
datatable()
all.matches %>%
group_by(competition.competition_name, season.season_name,
away_team.away_team_name, home_team.home_team_gender) %>%
count() %>%
datatable()
all.matches %>%
group_by(competition.competition_name, season.season_name,
away_team.away_team_name) %>%
count() %>%
datatable()
all.matches %>%
group_by(competition.competition_name, season.season_name,
away_team.away_team_name, home_team.home_team_gender) %>%
count() %>%
datatable()
lineups <- list.files(path=paste0(path,"lineups"),
full.names = TRUE,recursive = TRUE)
head(lineups)
lineups <- list.files(path=paste0(path,"lineups"),
full.names = TRUE,recursive = TRUE)
head(lineups)
lineups
lineups <- list.files(path=paste0(path,"lineups"),
full.names = TRUE,recursive = TRUE)
head(lineups)
all.matches %>% count()
length(lineups)
length(match.files)
all.matches <- lapply(match.files, function(x){
match.temp <- fromJSON(file=x)
matches.df <- lapply(match.temp, function(y){
data.frame(t(unlist(y)), stringsAsFactors = FALSE)
})
bind_rows(matches.df)
})
View(all.matches)
all.matches <- lapply(match.files, function(x){
match.temp <- fromJSON(file=x)
matches.df <- lapply(match.temp, function(y){
data.frame(t(unlist(y)), stringsAsFactors = FALSE)
})
bind_rows(matches.df)
}) %>% bind_rows()
head(lineups)
# Match Id
lineups[1]
str_extract((lineups[1], "Akademik Çalışmalar"))
str_extract(lineups[1], "Akademik Çalışmalar")
str_extract(lineups[1], "Akademik *")
str_extract(lineups[1], "\[0-9]")
str_extract(lineups[1], "\[0-9]\")
str_extract(lineups[1], "\\[0-9]\\")
str_extract(lineups[1], "\\d\\")
str_extract(lineups[1], "\\d")
str_extract_all(lineups[1], "\\d")
str_extract_all(lineups[1], "\\(?[0-9]+\\)?")
str_extract(lineups[1], "\\(?[0-9]+\\)?")
temp <- fromJSON(file=lineups[1])
View(temp)
```{r}
lineups <- lapply(lineups, function(x){
# Match Id
match_id <- data.frame(match_id = as.numeric(str_extract(x, "\\(?[0-9]+\\)?")))
# Read Json
temp <- fromJSON(file=x)
team <- lapply(temp, function(y){
lineups_list <- y$lineup
# Match Id & Name
team_details <- data.frame(
team_id = y$team_id,
team_name = y$team_name,
stringsAsFactors = FALSE
)
lineups_list <- lapply(lineups_list, function(z){
if(is.null(z$player_nickname)){nickname <- NA_character_}else{nickname <- z$player_nickname}
if(is.null(z$jersey_number)){jersey_number <- NA_integer_}else{jersey_number <- z$jersey_number}
if(is.null(z$country$id)){country_id <- NA_integer_}else{country_id <- z$country$id}
if(is.null(z$country$name)){country_name <- NA_character_}else{country_name <- z$country$name}
data.frame(
player_id = z$player_id,
player_name = z$player_name,
player_nickname = nickname,
jersey_number = jersey_number,
country_id = country_id,
country_name = country_name,
stringsAsFactors = FALSE
)
}) %>% bind_rows()
cbind(team_details, lineups_list)
}) %>% bind_rows()
cbind(match_id, team)
}) %>% bind_rows() %>% mutate(player_nickname = if_else(is.na(player_nickname), player_name, player_nickname))
datatable(lineups[1:100,])
temp
temp$lineup
str(temp)
temp[1]
temp[[1]]
temp[[1]]$lineup
temp[[2]]$lineup
